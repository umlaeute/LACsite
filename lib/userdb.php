<?php
require_once('lib/programdb.php');

function fetch_users($db, $filter=array()) {
	$q='SELECT * from user WHERE 1'; 
	$q.=' AND (flags&1)=1';
	if (isset($filter['vip']))
		$q.=' AND (vip&'.$filter['vip'].')!=0';
	$q.=' ORDER BY name;'; 
	$res=$db->query($q);
	if (!$res) { say_db_error('fetch_users'); return array();}
	return $res->fetchAll(PDO::FETCH_ASSOC);
}

function fetch_user($db, $uid) {
	$q='SELECT * from user WHERE id='.intval($uid); 
	$q.=' AND (flags&1)=1;';
	$res=$db->query($q);
	if (!$res) { say_db_error('fetch_user'); return NULL;}
	return $res->fetch(PDO::FETCH_ASSOC);
}

function fetch_user_activities($db, $uid) {
	$q='SELECT DISTINCT activity.*
		FROM activity,user,usermap 
		WHERE activity.id=usermap.activity_id AND user.id=usermap.user_id
		AND user.id='.intval($uid);
	$q.=' ORDER BY day, strftime(\'%H:%M\',starttime), typesort(type), location_id;'; 
	$res=$db->query($q);
	if (!$res) { say_db_error('fetch_users'); return array();}
	return $res->fetchAll(PDO::FETCH_ASSOC);
}

function usr_sanitize_imgurl($url) {
	if (empty($url)) return '';

	$err=0;
	$url=trim(htmlspecialchars($url,ENT_QUOTES));

	if (!preg_match('|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i', $url)) $err=1;

	if ($err) {
		echo '<div class="dbmsg">The specified URL "'.$url.'" is not acceptable.</div>'."\n";
		return '';
	}
	return $url;
}

function usr_imgurl($u,$size=128) {
	if (!empty($u['url_image'])) { return $u['url_image']; }
	if (!empty($u['email'])) {
		$grhash=md5(strtolower(trim($u['email'])));
		return 'http://gravatar.com/avatar/'.$grhash.'?s='.$size.'&amp;d=mm';
	}
	return 'http://gravatar.com/avatar/0?f=y&amp;s='.$size.'&amp;d=mm'; ## TODO local mystery man image.
}

function usr_auth_ukey($db, $ukey, $email='') {
	$q='SELECT user_id from auth,user WHERE auth.ukey = '.$db->quote($ukey);
	if(!empty($email))
		$q.=' AND auth.user_id = user.id AND user.email='.$db->quote($email);
	$q.=';';
	$res=$db->query($q);
	if (!$res) { say_db_error('usr_auth_ukey'); return -1;}
	$d = $res->fetch(PDO::FETCH_ASSOC);
	return $d['user_id'];
}

function usr_get_uid($db, $email) {
	if (empty($email)) { return -1;}
	$q='SELECT id from user WHERE email = '.$db->quote($email).';'; 
	$res=$db->query($q);
	if (!$res) { say_db_error('usr_get_uid'); return -1;}
	$d = $res->fetch(PDO::FETCH_ASSOC);
	return $d['id'];
}

function usr_sendhash($db, $uid) {
	# check that no access-key has been sent in the last hour or so.
	# TODO: remember 3 last times - over 24 hours.
	$q='SELECT udate from auth WHERE user_id='.$uid.' AND DATETIME(udate,\'+300 seconds\') > DATETIME() ;';

	$res=$db->query($q);
	if (!$res) { say_db_error('usr_sendhash'); return 1;}
	$d = $res->fetch(PDO::FETCH_ASSOC);

	if (isset($d['udate'])) {
		return 2;
	}

	$q='SELECT * from user WHERE id='.$uid.';';
	$res=$db->query($q);
	if (!$res) { say_db_error('usr_sendhash get user info'); return 1;}
	$d = $res->fetch(PDO::FETCH_ASSOC);

	# create hash
	$ukey=substr(sha1('SaLt'.$uid.SHORTTITLE.microtime().$d['email'].$d['tagline']),0, 8);

	# TODO: check for hash conflicts.

	# save in DB
	$q='INSERT OR REPLACE INTO auth (user_id, ukey, udate) VALUES ('.$uid.','.$db->quote($ukey).', DATETIME());';
	if ($db->exec($q) !== 1){
		say_db_error('usr_sendhash save-key');
		return -2;
	}

	# send email to user
  global $config;
  $headers = 'From: '.$config['mailfrom'];
  $subject=SHORTTITLE.' user-profile';
  $rcpt=$d['email'];
	$msg='';
	$msg.='Dear '.$d['name'].',

You receive this email because you are either Speaker or member of the conference-committee of the '.SHORTTITLE.'.

The conference website allows you to create a publicly visible personal profile (biography, links to sites, mugshot, etc.). Providing this information is optional, although we encourage you to introduce yourself and help to give the conference a face.

To edit or update your profile, please follow this direct link:
';
	$msg.=canonical_url('profile', 'ukey='.rawurlencode($ukey),'&');
	$msg.='
or log-in manually using your email-address and the password 
  '.$ukey.'  at '.canonical_url('profile').'
';
	$msg.=$config['mailfooter'].'

-- 
This mail was generated by '.CANONICALURL.'/

';
	mail($rcpt, $subject, wordwrap($msg,70), $headers);
	return 0;
}

function usr_msg_sendhash($db, $uid, $email='') {
	global $config;
	switch (usr_sendhash($db, $uid)) {
		case 0:
			if (!empty($empty))
				echo '<div class="dbmsg">An email has been sent to your account ('.$email.'). Please follow the link given in the email to edit your profile.</div>'."\n";
			else
				echo '<div class="dbmsg">Invitation sent to uid:'.$uid.'.</div>'."\n";
			return 0;
			break;
		case 2:
			echo '<div class="dbmsg">You already requested a new access-token in the last 5 minutes.</div>'."\n";
			break;
		default:
			echo '<div class="dbmsg">An error occured. Please try again. If the problem presists, contact '.$config['txtemail'].'</div>'."\n";
			break;
	}
	return -1;
}
